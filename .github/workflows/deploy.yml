name: Deploy

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get full git history for checking file changes

      - name: Get previous tag
        id: previoustag
        if: github.event_name == 'push'
        run: |
          echo "tag=$(git describe --tags --abbrev=0 HEAD^)" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      # 🔧 新增：使用最新版 Wrangler 执行数据库迁移
      - name: Apply D1 Database Migration
        run: npx wrangler@latest d1 migrations apply ${{ secrets.DATABASE_NAME }} --remote
        env:
          WRANGLER_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          # 注意：D1 使用 CLOUDFLARE_API_TOKEN，不是 ACCOUNT_ID
        # 如果迁移失败，整个部署也会失败，这是期望行为

      # 🔧 原来的部署脚本
      - name: Run deploy script
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_ID: ${{ secrets.DATABASE_ID }}
          KV_NAMESPACE_NAME: ${{ secrets.KV_NAMESPACE_NAME }}
          KV_NAMESPACE_ID: ${{ secrets.KV_NAMESPACE_ID }}
          CUSTOM_DOMAIN: ${{ secrets.CUSTOM_DOMAIN }}
          AUTH_GITHUB_ID: ${{ secrets.AUTH_GITHUB_ID }}
          AUTH_GITHUB_SECRET: ${{ secrets.AUTH_GITHUB_SECRET }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          # ✅ 添加环境变量，让 deploy script 跳过迁移
          SKIP_DB_MIGRATION: "true"
        run: pnpm dlx tsx scripts/deploy/index.ts

      # Clean up
      - name: Post deployment cleanup
        run: |
          rm -f .env*.*
          rm -f wrangler*.json
